Features implemented:
	Sound system with music and SFX buses
	Text box system
		Option to spell out characters one by one
		Shake
	Characters
		Each character object lets you pick a tag, a full name, and a name color
		Also a sprite renderer with different animations
		Different text features
		Opacity- feature to hide them when not speaking
		Customizable fade in length
	Background
		Option to fade to a new one
			Fades the entire scene
	Main menu
		Currently just start game and toggle audio
	In-game menu
		Toggle audio, history
	Keyboard focus
	Choice menus
	Option to read commands in from text files
	Input box
		For strings only

To add:
	Maybe make the audio in a global variables?
		This would avoid duplicating some code between main_menu and AudioSources
	Add text input system
		For putting in your name (for example)
	Add features to runSceneFromFile
		Warning: If you call a dialogue menu at the end of a string of dialogue, and you take it to another menu, sceneFromFileDone will still be called for the end of the first scene. The game will not await it again on subsequent scenes, so be careful what you put after calling runSceneFromFile.
	Save system?
		Not yet; this is dependent on what type of game is made in this framework/engine
	Make it so "Return to main menu" asks if you're sure you want to return?
		Also quit game button in menu?
	Back button?
		Requires a "stack" of actions that are evaluated
	Choice menu- make it so you can go to the menu using focus from there?
	
		
Documentation
	Characters
		To add a character, add a new instance of character_template as a child of the Characters node.
		Make sure to give the character a name and a tag.
			The tag is like a short name that's used in the code to quickly reference the character.
			Tags must be unique, but names can be the same.
			Make sure the tag isn't an empty string (""). That's reserved for the narrator/non-character.
			Also check runSceneFromFile in MainScene and make sure that character tags don't coincide with any special tags from that.
		In its SpriteRenderer, make a new unique SpriteFrames, then add all the animations/images that you want to use to it.
	Background
		To add backgrounds, add them as animations to the Background object in SampleScene.
			This means that you can have animated backgrounds.
		To switch the background, you can just play the animation for the one you want.
		To switch the background and fade, call BGFade() with the animation you want.
			Follow it with await BGFadeDone.
	Text box
		Make sure to go into the inspector and attach the parent node of the characters to the Characters Container property.
		Also, in the signal connections, connect newText() to a function in MainScene that triggers setCharacterOpacities() in that script. This will make the function of making nonspeaking characters transparent work.
		I set the Z index to 1 to make sure it shows over the characters.
	Dialogue
		In dialogue files, write each line in this form:
			Character tag|What to say
		To write a line with no speaker (just the default narrator), just put the line and no character tag or |.
		If no character tag matches the line of dialogue, it will just use the default speaker.
		Avoid using brackets [] in dialogue, except to use BBCode tags.
		$name will be parsed as the variable under tag "name" in the dictionary called vars.
		Escape the dollar sign (\$) to prevent this from happening.
		Put a space in between the variable and any following punctuation.
		
		There are also other features that can be used in dialogue if you use runSceneFromFile to read the dialogue files. Read through runSceneFromFile in the code, or the sample dialogue file, to see what they all are.
	Make sure to include *.txt in the export settings for the project.